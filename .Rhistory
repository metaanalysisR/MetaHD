MetaHD_true_df <- as.data.frame(est_known)
colnames(est_unknown_psi) <- var_names
MetaHD_est_df <- as.data.frame(est_unknown_psi)
FC_df <- as.data.frame(log(FC_est))
VoteCount_df <- as.data.frame(vote_count)
FEM_df <- as.data.frame(FEMest)
REM_df <- as.data.frame(REMest)
UMA_df <- as.data.frame(UMAest)
prop <- list()
current_prop <- c()
dfs <- list(MetaHD_true_df,MetaHD_est_df,REM_df,FEM_df,UMA_df,FC_df,VoteCount_df)
df <- data.frame()
for (i in 1:length(dfs)) {
for (j in 1:nrow(dfs[[i]])) {
current_df <- dfs[[i]]
ranked <- colnames(current_df)[order(abs(as.numeric(current_df[j, ])), decreasing = TRUE)]
current_prop[j] <- length(intersect(ranked[1:length(true_up_down)],true_up_down))/length(true_up_down)
}
prop[[i]] <- current_prop
df1 <- data.frame(
Method = rep(method[i], length(prop[[i]])),
Prop = prop[[i]]
)
df <- rbind(df,df1)
}
library(ggplot2)
manual_colors <- c("red", "blue","green", "purple", "orange", "black","pink")
p8 <- ggplot(df, aes(x = Method, y = Prop, fill = Method)) +
scale_fill_manual(values = manual_colors)+
geom_boxplot() +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), size = 1.5, alpha = 0.6) +
labs(y = "Proportion of correctly identified top metabolites \nin each simulated dataset") +
theme(legend.position = "bottom",
axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_text(size = 14),legend.text = element_text(size = 12))+
ylim(c(0,1))
## Within-study Corr = 0.1 ##
load('MCAR_sim_9.RData')
colnames(est_known) <- var_names
MetaHD_true_df <- as.data.frame(est_known)
colnames(est_unknown_psi) <- var_names
MetaHD_est_df <- as.data.frame(est_unknown_psi)
FC_df <- as.data.frame(log(FC_est))
VoteCount_df <- as.data.frame(vote_count)
FEM_df <- as.data.frame(FEMest)
REM_df <- as.data.frame(REMest)
UMA_df <- as.data.frame(UMAest)
prop <- list()
current_prop <- c()
dfs <- list(MetaHD_true_df,MetaHD_est_df,REM_df,FEM_df,UMA_df,FC_df,VoteCount_df)
df <- data.frame()
for (i in 1:length(dfs)) {
for (j in 1:nrow(dfs[[i]])) {
current_df <- dfs[[i]]
ranked <- colnames(current_df)[order(abs(as.numeric(current_df[j, ])), decreasing = TRUE)]
current_prop[j] <- length(intersect(ranked[1:length(true_up_down)],true_up_down))/length(true_up_down)
}
prop[[i]] <- current_prop
df1 <- data.frame(
Method = rep(method[i], length(prop[[i]])),
Prop = prop[[i]]
)
df <- rbind(df,df1)
}
library(ggplot2)
manual_colors <- c("red", "blue","green", "purple", "orange", "black","pink")
p9 <- ggplot(df, aes(x = Method, y = Prop, fill = Method)) +
scale_fill_manual(values = manual_colors)+
geom_boxplot() +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), size = 1.5, alpha = 0.6) +
labs(y = "Proportion of correctly identified top metabolites \nin each simulated dataset") +
theme(legend.position = "bottom",
axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_text(size = 14),legend.text = element_text(size = 12))+
ylim(c(0,1))
png("box_plots_sim_MCAR_data_up_down.png", width = 24, height = 25, units = "in", res = 350)
ggpubr::ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,
ncol = 3, nrow = 3, common.legend = TRUE, legend="bottom")
dev.off()
save.image(file = "sim_MCAR_plots.RData")
setwd("C:/Users/21460438/OneDrive - LA TROBE UNIVERSITY/Documents/PhD Work/HPC/Simulations/simulation-codes-known-Sk-MCAR-replace_impute-1000sim")
load("sim_MCAR_plots.RData")
plot2 <- p2
# Randomly choose true effect sizes for the outcomes
N <- 30
set.seed(2023)
theta <- rnorm(N,0,2)
# Define metabolite names using letters of the English alphabet
var_names <- LETTERS[1:N]
var_names[27] <- "AA"
var_names[28] <- "BB"
var_names[29] <- "CC"
var_names[30] <- "DD"
# Selecting top 40% of metabolites ranked by |true theta| as actual positives and negatives
true_df <- data.frame(Metabolite = var_names,
Theta = theta)
true_df_ranked <- true_df[order(abs(true_df$Theta),decreasing = TRUE),]
true_up_down <- true_df_ranked$Metabolite[1:12]
method <- c("MetaHD(true)","MetaHD(estimated)","Univariate random","Univariate fixed","Univariate fixed/random based on heterogeneity","Fold-change and p-value combination","Vote-counting")
### CASE 3: MAR DATA ###
setwd("C:/Users/21460438/OneDrive - LA TROBE UNIVERSITY/Documents/PhD Work/HPC/Simulations/simulation-codes-known-Sk-MAR-replace_impute_multiple_missing-1000sim")
## Within-study Corr = 0.9 ##
load('MAR_sim_1.RData')
colnames(est_known) <- var_names
MetaHD_true_df <- as.data.frame(est_known)
colnames(est_unknown_psi) <- var_names
MetaHD_est_df <- as.data.frame(est_unknown_psi)
FC_df <- as.data.frame(log(FC_est))
VoteCount_df <- as.data.frame(vote_count)
FEM_df <- as.data.frame(FEMest)
REM_df <- as.data.frame(REMest)
UMA_df <- as.data.frame(UMAest)
prop <- list()
current_prop <- c()
dfs <- list(MetaHD_true_df,MetaHD_est_df,REM_df,FEM_df,UMA_df,FC_df,VoteCount_df)
df <- data.frame()
for (i in 1:length(dfs)) {
for (j in 1:nrow(dfs[[i]])) {
current_df <- dfs[[i]]
ranked <- colnames(current_df)[order(abs(as.numeric(current_df[j, ])), decreasing = TRUE)]
current_prop[j] <- length(intersect(ranked[1:length(true_up_down)],true_up_down))/length(true_up_down)
}
prop[[i]] <- current_prop
df1 <- data.frame(
Method = rep(method[i], length(prop[[i]])),
Prop = prop[[i]]
)
df <- rbind(df,df1)
}
library(ggplot2)
manual_colors <- c("red", "blue","green", "purple", "orange", "black","pink")
p1 <- ggplot(df, aes(x = Method, y = Prop, fill = Method)) +
scale_fill_manual(values = manual_colors)+
geom_boxplot() +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), size = 1.5, alpha = 0.6) +
labs(y = "Proportion of correctly identified top metabolites \nin each simulated dataset") +
theme(legend.position = "bottom",
axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_text(size = 14),legend.text = element_text(size = 12))+
ylim(c(0,1))
## Within-study Corr = 0.8 ##
load('MAR_sim_2.RData')
colnames(est_known) <- var_names
MetaHD_true_df <- as.data.frame(est_known)
colnames(est_unknown_psi) <- var_names
MetaHD_est_df <- as.data.frame(est_unknown_psi)
FC_df <- as.data.frame(log(FC_est))
VoteCount_df <- as.data.frame(vote_count)
FEM_df <- as.data.frame(FEMest)
REM_df <- as.data.frame(REMest)
UMA_df <- as.data.frame(UMAest)
prop <- list()
current_prop <- c()
dfs <- list(MetaHD_true_df,MetaHD_est_df,REM_df,FEM_df,UMA_df,FC_df,VoteCount_df)
df <- data.frame()
for (i in 1:length(dfs)) {
for (j in 1:nrow(dfs[[i]])) {
current_df <- dfs[[i]]
ranked <- colnames(current_df)[order(abs(as.numeric(current_df[j, ])), decreasing = TRUE)]
current_prop[j] <- length(intersect(ranked[1:length(true_up_down)],true_up_down))/length(true_up_down)
}
prop[[i]] <- current_prop
df1 <- data.frame(
Method = rep(method[i], length(prop[[i]])),
Prop = prop[[i]]
)
df <- rbind(df,df1)
}
library(ggplot2)
manual_colors <- c("red", "blue","green", "purple", "orange", "black","pink")
p2 <- ggplot(df, aes(x = Method, y = Prop, fill = Method)) +
scale_fill_manual(values = manual_colors)+
geom_boxplot() +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), size = 1.5, alpha = 0.6) +
labs(y = "Proportion of correctly identified top metabolites \nin each simulated dataset") +
theme(legend.position = "bottom",
axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_text(size = 14),legend.text = element_text(size = 12))+
ylim(c(0,1))
## Within-study Corr = 0.7 ##
load('MAR_sim_3.RData')
colnames(est_known) <- var_names
MetaHD_true_df <- as.data.frame(est_known)
colnames(est_unknown_psi) <- var_names
MetaHD_est_df <- as.data.frame(est_unknown_psi)
FC_df <- as.data.frame(log(FC_est))
VoteCount_df <- as.data.frame(vote_count)
FEM_df <- as.data.frame(FEMest)
REM_df <- as.data.frame(REMest)
UMA_df <- as.data.frame(UMAest)
prop <- list()
current_prop <- c()
dfs <- list(MetaHD_true_df,MetaHD_est_df,REM_df,FEM_df,UMA_df,FC_df,VoteCount_df)
df <- data.frame()
for (i in 1:length(dfs)) {
for (j in 1:nrow(dfs[[i]])) {
current_df <- dfs[[i]]
ranked <- colnames(current_df)[order(abs(as.numeric(current_df[j, ])), decreasing = TRUE)]
current_prop[j] <- length(intersect(ranked[1:length(true_up_down)],true_up_down))/length(true_up_down)
}
prop[[i]] <- current_prop
df1 <- data.frame(
Method = rep(method[i], length(prop[[i]])),
Prop = prop[[i]]
)
df <- rbind(df,df1)
}
library(ggplot2)
manual_colors <- c("red", "blue","green", "purple", "orange", "black","pink")
p3 <- ggplot(df, aes(x = Method, y = Prop, fill = Method)) +
scale_fill_manual(values = manual_colors)+
geom_boxplot() +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), size = 1.5, alpha = 0.6) +
labs(y = "Proportion of correctly identified top metabolites \nin each simulated dataset") +
theme(legend.position = "bottom",
axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_text(size = 14),legend.text = element_text(size = 12))+
ylim(c(0,1))
## Within-study Corr = 0.6 ##
load('MAR_sim_4.RData')
colnames(est_known) <- var_names
MetaHD_true_df <- as.data.frame(est_known)
colnames(est_unknown_psi) <- var_names
MetaHD_est_df <- as.data.frame(est_unknown_psi)
FC_df <- as.data.frame(log(FC_est))
VoteCount_df <- as.data.frame(vote_count)
FEM_df <- as.data.frame(FEMest)
REM_df <- as.data.frame(REMest)
UMA_df <- as.data.frame(UMAest)
prop <- list()
current_prop <- c()
dfs <- list(MetaHD_true_df,MetaHD_est_df,REM_df,FEM_df,UMA_df,FC_df,VoteCount_df)
df <- data.frame()
for (i in 1:length(dfs)) {
for (j in 1:nrow(dfs[[i]])) {
current_df <- dfs[[i]]
ranked <- colnames(current_df)[order(abs(as.numeric(current_df[j, ])), decreasing = TRUE)]
current_prop[j] <- length(intersect(ranked[1:length(true_up_down)],true_up_down))/length(true_up_down)
}
prop[[i]] <- current_prop
df1 <- data.frame(
Method = rep(method[i], length(prop[[i]])),
Prop = prop[[i]]
)
df <- rbind(df,df1)
}
library(ggplot2)
manual_colors <- c("red", "blue","green", "purple", "orange", "black","pink")
p4 <- ggplot(df, aes(x = Method, y = Prop, fill = Method)) +
scale_fill_manual(values = manual_colors)+
geom_boxplot() +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), size = 1.5, alpha = 0.6) +
labs(y = "Proportion of correctly identified top metabolites \nin each simulated dataset") +
theme(legend.position = "bottom",
axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_text(size = 14),legend.text = element_text(size = 12))+
ylim(c(0,1))
## Within-study Corr = 0.5 ##
load('MAR_sim_5.RData')
colnames(est_known) <- var_names
MetaHD_true_df <- as.data.frame(est_known)
colnames(est_unknown_psi) <- var_names
MetaHD_est_df <- as.data.frame(est_unknown_psi)
FC_df <- as.data.frame(log(FC_est))
VoteCount_df <- as.data.frame(vote_count)
FEM_df <- as.data.frame(FEMest)
REM_df <- as.data.frame(REMest)
UMA_df <- as.data.frame(UMAest)
prop <- list()
current_prop <- c()
dfs <- list(MetaHD_true_df,MetaHD_est_df,REM_df,FEM_df,UMA_df,FC_df,VoteCount_df)
df <- data.frame()
for (i in 1:length(dfs)) {
for (j in 1:nrow(dfs[[i]])) {
current_df <- dfs[[i]]
ranked <- colnames(current_df)[order(abs(as.numeric(current_df[j, ])), decreasing = TRUE)]
current_prop[j] <- length(intersect(ranked[1:length(true_up_down)],true_up_down))/length(true_up_down)
}
prop[[i]] <- current_prop
df1 <- data.frame(
Method = rep(method[i], length(prop[[i]])),
Prop = prop[[i]]
)
df <- rbind(df,df1)
}
library(ggplot2)
manual_colors <- c("red", "blue","green", "purple", "orange", "black","pink")
p5 <- ggplot(df, aes(x = Method, y = Prop, fill = Method)) +
scale_fill_manual(values = manual_colors)+
geom_boxplot() +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), size = 1.5, alpha = 0.6) +
labs(y = "Proportion of correctly identified top metabolites \nin each simulated dataset") +
theme(legend.position = "bottom",
axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_text(size = 14),legend.text = element_text(size = 12))+
ylim(c(0,1))
## Within-study Corr = 0.4 ##
load('MAR_sim_6.RData')
colnames(est_known) <- var_names
MetaHD_true_df <- as.data.frame(est_known)
colnames(est_unknown_psi) <- var_names
MetaHD_est_df <- as.data.frame(est_unknown_psi)
FC_df <- as.data.frame(log(FC_est))
VoteCount_df <- as.data.frame(vote_count)
FEM_df <- as.data.frame(FEMest)
REM_df <- as.data.frame(REMest)
UMA_df <- as.data.frame(UMAest)
prop <- list()
current_prop <- c()
dfs <- list(MetaHD_true_df,MetaHD_est_df,REM_df,FEM_df,UMA_df,FC_df,VoteCount_df)
df <- data.frame()
for (i in 1:length(dfs)) {
for (j in 1:nrow(dfs[[i]])) {
current_df <- dfs[[i]]
ranked <- colnames(current_df)[order(abs(as.numeric(current_df[j, ])), decreasing = TRUE)]
current_prop[j] <- length(intersect(ranked[1:length(true_up_down)],true_up_down))/length(true_up_down)
}
prop[[i]] <- current_prop
df1 <- data.frame(
Method = rep(method[i], length(prop[[i]])),
Prop = prop[[i]]
)
df <- rbind(df,df1)
}
library(ggplot2)
manual_colors <- c("red", "blue","green", "purple", "orange", "black","pink")
p6 <- ggplot(df, aes(x = Method, y = Prop, fill = Method)) +
scale_fill_manual(values = manual_colors)+
geom_boxplot() +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), size = 1.5, alpha = 0.6) +
labs(y = "Proportion of correctly identified top metabolites \nin each simulated dataset") +
theme(legend.position = "bottom",
axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_text(size = 14),legend.text = element_text(size = 12))+
ylim(c(0,1))
## Within-study Corr = 0.3 ##
load('MAR_sim_7.RData')
colnames(est_known) <- var_names
MetaHD_true_df <- as.data.frame(est_known)
colnames(est_unknown_psi) <- var_names
MetaHD_est_df <- as.data.frame(est_unknown_psi)
FC_df <- as.data.frame(log(FC_est))
VoteCount_df <- as.data.frame(vote_count)
FEM_df <- as.data.frame(FEMest)
REM_df <- as.data.frame(REMest)
UMA_df <- as.data.frame(UMAest)
prop <- list()
current_prop <- c()
dfs <- list(MetaHD_true_df,MetaHD_est_df,REM_df,FEM_df,UMA_df,FC_df,VoteCount_df)
df <- data.frame()
for (i in 1:length(dfs)) {
for (j in 1:nrow(dfs[[i]])) {
current_df <- dfs[[i]]
ranked <- colnames(current_df)[order(abs(as.numeric(current_df[j, ])), decreasing = TRUE)]
current_prop[j] <- length(intersect(ranked[1:length(true_up_down)],true_up_down))/length(true_up_down)
}
prop[[i]] <- current_prop
df1 <- data.frame(
Method = rep(method[i], length(prop[[i]])),
Prop = prop[[i]]
)
df <- rbind(df,df1)
}
library(ggplot2)
manual_colors <- c("red", "blue","green", "purple", "orange", "black","pink")
p7 <- ggplot(df, aes(x = Method, y = Prop, fill = Method)) +
scale_fill_manual(values = manual_colors)+
geom_boxplot() +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), size = 1.5, alpha = 0.6) +
labs(y = "Proportion of correctly identified top metabolites \nin each simulated dataset") +
theme(legend.position = "bottom",
axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_text(size = 14),legend.text = element_text(size = 12))+
ylim(c(0,1))
## Within-study Corr = 0.2 ##
load('MAR_sim_8.RData')
colnames(est_known) <- var_names
MetaHD_true_df <- as.data.frame(est_known)
colnames(est_unknown_psi) <- var_names
MetaHD_est_df <- as.data.frame(est_unknown_psi)
FC_df <- as.data.frame(log(FC_est))
VoteCount_df <- as.data.frame(vote_count)
FEM_df <- as.data.frame(FEMest)
REM_df <- as.data.frame(REMest)
UMA_df <- as.data.frame(UMAest)
prop <- list()
current_prop <- c()
dfs <- list(MetaHD_true_df,MetaHD_est_df,REM_df,FEM_df,UMA_df,FC_df,VoteCount_df)
df <- data.frame()
for (i in 1:length(dfs)) {
for (j in 1:nrow(dfs[[i]])) {
current_df <- dfs[[i]]
ranked <- colnames(current_df)[order(abs(as.numeric(current_df[j, ])), decreasing = TRUE)]
current_prop[j] <- length(intersect(ranked[1:length(true_up_down)],true_up_down))/length(true_up_down)
}
prop[[i]] <- current_prop
df1 <- data.frame(
Method = rep(method[i], length(prop[[i]])),
Prop = prop[[i]]
)
df <- rbind(df,df1)
}
library(ggplot2)
manual_colors <- c("red", "blue","green", "purple", "orange", "black","pink")
p8 <- ggplot(df, aes(x = Method, y = Prop, fill = Method)) +
scale_fill_manual(values = manual_colors)+
geom_boxplot() +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), size = 1.5, alpha = 0.6) +
labs(y = "Proportion of correctly identified top metabolites \nin each simulated dataset") +
theme(legend.position = "bottom",
axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_text(size = 14),legend.text = element_text(size = 12))+
ylim(c(0,1))
## Within-study Corr = 0.1 ##
load('MAR_sim_9.RData')
colnames(est_known) <- var_names
MetaHD_true_df <- as.data.frame(est_known)
colnames(est_unknown_psi) <- var_names
MetaHD_est_df <- as.data.frame(est_unknown_psi)
FC_df <- as.data.frame(log(FC_est))
VoteCount_df <- as.data.frame(vote_count)
FEM_df <- as.data.frame(FEMest)
REM_df <- as.data.frame(REMest)
UMA_df <- as.data.frame(UMAest)
prop <- list()
current_prop <- c()
dfs <- list(MetaHD_true_df,MetaHD_est_df,REM_df,FEM_df,UMA_df,FC_df,VoteCount_df)
df <- data.frame()
for (i in 1:length(dfs)) {
for (j in 1:nrow(dfs[[i]])) {
current_df <- dfs[[i]]
ranked <- colnames(current_df)[order(abs(as.numeric(current_df[j, ])), decreasing = TRUE)]
current_prop[j] <- length(intersect(ranked[1:length(true_up_down)],true_up_down))/length(true_up_down)
}
prop[[i]] <- current_prop
df1 <- data.frame(
Method = rep(method[i], length(prop[[i]])),
Prop = prop[[i]]
)
df <- rbind(df,df1)
}
library(ggplot2)
manual_colors <- c("red", "blue","green", "purple", "orange", "black","pink")
p9 <- ggplot(df, aes(x = Method, y = Prop, fill = Method)) +
scale_fill_manual(values = manual_colors)+
geom_boxplot() +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), size = 1.5, alpha = 0.6) +
labs(y = "Proportion of correctly identified top metabolites \nin each simulated dataset") +
theme(legend.position = "bottom",
axis.text.x = element_blank(), axis.ticks.x = element_blank(),
legend.title = element_text(size = 14),legend.text = element_text(size = 12))+
ylim(c(0,1))
png("box_plots_sim_MAR_data_up_down.png", width = 24, height = 25, units = "in", res = 350)
ggpubr::ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,
ncol = 3, nrow = 3, common.legend = TRUE, legend="bottom")
dev.off()
save.image(file = "sim_MAR_plots.RData")
setwd("C:/Users/21460438/OneDrive - LA TROBE UNIVERSITY/Documents/PhD Work/HPC/Simulations/simulation-codes-known-Sk-MAR-replace_impute_multiple_missing-1000sim")
load("sim_MAR_plots.RData")
plot3 <- p2
setwd("C:\\Users\\21460438\\OneDrive - LA TROBE UNIVERSITY\\Documents\\PhD Work\\.Rmd and .R  Files\\Simulations\\working_drafts_latest_codes")
png("combined_box_plots.png", width = 15, height = 5, units = "in", res = 350)
ggpubr::ggarrange(plot1,plot2,plot3,
ncol = 3, nrow = 1, common.legend = TRUE, legend="bottom",labels = c("(i)", "(ii)", "(iii)"),label.x = 0, label.y = 1.01)
dev.off()
install.packages("MetaHD")
library(MetaHD)
library(MetaHD)
library(MetaHD)
library(MetaHD)
library(MetaHD)
library(MetaHD)
library(MetaHD)
library(MetaHD)
library(MetaHD)
library(MetaHD)
devtools::check("C:\\Users\\21460438\\OneDrive - LA TROBE UNIVERSITY\\Documents\\PhD Work\\R packages-JCL\\MetaHD",manual = TRUE,
cran = TRUE,
remote = TRUE,
incoming = TRUE,
force_suggests = TRUE,
run_dont_test = TRUE,
args = "--timings",
env_vars = c(NOT_CRAN = "false"))
devtools::check("C:\\Users\\21460438\\OneDrive - LA TROBE UNIVERSITY\\Documents\\PhD Work\\R packages-JCL\\MetaHD",manual = TRUE,
cran = TRUE,
remote = TRUE,
incoming = TRUE,
force_suggests = TRUE,
run_dont_test = TRUE,
args = "--timings",
env_vars = c(NOT_CRAN = "false"))
devtools::check("C:\\Users\\21460438\\OneDrive - LA TROBE UNIVERSITY\\Documents\\PhD Work\\R packages-JCL\\MetaHD",manual = TRUE,
cran = TRUE,
remote = TRUE,
incoming = TRUE,
force_suggests = TRUE,
run_dont_test = TRUE,
args = "--timings",
env_vars = c(NOT_CRAN = "false"))
library(MetaHD)
realdata
library(devtools)
devtools::check("C:\\Users\\21460438\\OneDrive - LA TROBE UNIVERSITY\\Documents\\PhD Work\\R packages-JCL\\MetaHD",manual = TRUE,
cran = TRUE,
remote = TRUE,
incoming = TRUE,
force_suggests = TRUE,
run_dont_test = TRUE,
args = "--timings",
env_vars = c(NOT_CRAN = "false"))
devtools::build("C:\\Users\\21460438\\OneDrive - LA TROBE UNIVERSITY\\Documents\\PhD Work\\R packages-JCL\\MetaHD")
